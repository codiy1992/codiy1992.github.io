<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Documentation on Codiy's Notebook</title><link>https://note.codiy.net/docs/</link><description>Recent content in Documentation on Codiy's Notebook</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://note.codiy.net/docs/index.xml" rel="self" type="application/rss+xml"/><item><title>Caddy Usage</title><link>https://note.codiy.net/docs/2022/01/caddy-usage/</link><pubDate>Sun, 16 Jan 2022 11:59:15 +0800</pubDate><guid>https://note.codiy.net/docs/2022/01/caddy-usage/</guid><description>Build your own caddy images Dockerfile:
FROMcaddy:builder AS builderRUN xcaddy build \ --with github.com/caddy-dns/alidnsFROMcaddyCOPY --from=builder /usr/bin/caddy /usr/bin/caddyCaddy TLS Settings Caddyfile Syntax:
tls [internal|&amp;lt;email&amp;gt;] | [&amp;lt;cert_file&amp;gt; &amp;lt;key_file&amp;gt;] { protocols &amp;lt;min&amp;gt; [&amp;lt;max&amp;gt;] ciphers &amp;lt;cipher_suites...&amp;gt; curves &amp;lt;curves...&amp;gt; alpn &amp;lt;values...&amp;gt; load &amp;lt;paths...&amp;gt; ca &amp;lt;ca_dir_url&amp;gt; ca_root &amp;lt;pem_file&amp;gt; key_type ed25519|p256|p384|rsa2048|rsa4096 dns &amp;lt;provider_name&amp;gt; [&amp;lt;params...&amp;gt;] resolvers &amp;lt;dns_servers...&amp;gt; eab &amp;lt;key_id&amp;gt; &amp;lt;mac_key&amp;gt; on_demand client_auth { mode [request|require|verify_if_given|require_and_verify] trusted_ca_cert &amp;lt;base64_der&amp;gt; trusted_ca_cert_file &amp;lt;filename&amp;gt; trusted_leaf_cert &amp;lt;base64_der&amp;gt; trusted_leaf_cert_file &amp;lt;filename&amp;gt; } issuer &amp;lt;issuer_name&amp;gt; [&amp;lt;params...&amp;gt;] } 常见配置方式 Caddy Automatic Https</description></item><item><title>anki</title><link>https://note.codiy.net/docs/2022/01/anki/</link><pubDate>Wed, 05 Jan 2022 17:31:00 +0800</pubDate><guid>https://note.codiy.net/docs/2022/01/anki/</guid><description>Anki Awesome-anki tianshanghong/awesome-anki Add-ons(required) Review Heatmap Custom Background Image and Gear Icon No Distractions Full Screen: Clean review interface + Tablet/Touch support AnkiConnect Minimal Theme More Decks Stats and Time Left Button Colours (Good, Again) extended editor for field (for tables, search&amp;amp;replace, &amp;hellip;) AnkiWebView Inspector Advanced Copy Fields Progress Graphs and Stats for Learned and Matured Cards AwesomeTTS (Google Cloud Text-to-Speech &amp;amp; Microsoft Azure TTS) [unofficial] Advanced Browser Highlight Search Results in the Browser Fastbar- with nightmode support Always On Top Replay buttons on card CrowdAnki: JSON export&amp;amp;import.</description></item><item><title>All In One</title><link>https://note.codiy.net/docs/2022/01/all-in-one/</link><pubDate>Wed, 05 Jan 2022 17:30:19 +0800</pubDate><guid>https://note.codiy.net/docs/2022/01/all-in-one/</guid><description>宽带与光猫 宽带是否支持多播 光猫管理员账号密码 光猫由路由模式设置为桥接模式 拨号发现为局域网IP, 打给客服要求分配公网IP 软路由 CPU: J4125 网卡 i210 or i211 千兆网卡 内存条 存储 ESXi 官网镜像下载, ventoy 制作启动U盘 开机进 BIOS 选择引导方式优先级 进入 ESXi 安装界面, 快速按 Shift + o, 输入命令 限制缓存用的磁盘大小 安装完后, 管理网口选到 eht0, 然后设置IP地址 用网线将 eth0 与电脑连接。 电脑上设置IPV4属性，使得可以桥接到 ESXi. 电脑上浏览器输入 ESXi 管理地址，进行虚拟机管理. ROS OpenWrt 光猫，路由，网关，交换机，网桥，DNS，DHCP, NAT References aimuch/iAI</description></item><item><title>ROS Settings</title><link>https://note.codiy.net/docs/2022/01/ros-settings/</link><pubDate>Wed, 05 Jan 2022 11:42:08 +0800</pubDate><guid>https://note.codiy.net/docs/2022/01/ros-settings/</guid><description>基础设定 设置IP地址 /ip address add address=192.168.1.1/24 comment=&amp;quot;default configuration&amp;quot; interface=lan1 network=192.168.1.0 PPPOE 拨号上网 /interface ethernet set [ find default-name=ether1 ] name=lan1 set [ find default-name=ether2 ] name=wan1 /interface pppoe-client add name=pppoe interface=wan1 user=xxxx password=yyyy add-default-route=yes disabled=no 开启IP伪装共享上网(源地址为本局域网IP的IP数据包, 统一替换为路由器公网IP) /ip firewall nat add chain=srcnat action=masquerade 设置DNS /ip dns set allow-remote-requests=yes servers=218.85.157.99,218.85.152.99 配置 dhcp 服务 /ip pool add name=dhcp_pool0 ranges=192.168.1.5-192.168.1.253 /ip dhcp-server add name=dhcp interface=lan1 address-pool=dhcp_pool0 lease-time=10m /ip dhcp-server network add address=192.</description></item><item><title>How I Manage My Dotfiles</title><link>https://note.codiy.net/docs/2021/12/how-i-manage-my-dotfiles/</link><pubDate>Wed, 29 Dec 2021 16:09:48 +0800</pubDate><guid>https://note.codiy.net/docs/2021/12/how-i-manage-my-dotfiles/</guid><description>1. What is dofiles The definition by archlinux, User-specific application configuration is traditionally stored in so called dotfiles (files whose filename starts with a dot). Some of them listed below:
.vimrc .tmux.conf .gitconfig .ssh/ .aws/ .gnupg/ .config/ Those dotfiles are all located in your home directory.
2. Best way to manage dotfiles Bare repository and alias method is the best way to keep track of changes and synchronize your dotfiles between hosts.</description></item><item><title>Proxy Setting</title><link>https://note.codiy.net/docs/2021/03/proxy-setting/</link><pubDate>Wed, 10 Mar 2021 09:23:01 +0800</pubDate><guid>https://note.codiy.net/docs/2021/03/proxy-setting/</guid><description>详细参考: https://about.gitlab.com/blog/2021/01/27/we-need-to-talk-no-proxy/
http_proxy and https_proxy 小写格式总是被支持的, 大写格式不一定被支持 no_proxy 使用小写格式 可以使用 hostname:port 的格式 使用域名后缀匹配(e.g. example.com 会匹配 test.example.com) 要匹配顶级域名,需避免在域名前面有.号 避免使用CIDR格式, 因为只有 Go 和 Ruby 支持. 腾讯云需设置 export no_proxy=mirrors.tencentyun.com 否则无法使用 yum ssh 代理设置 安装依赖程序 sudo yum install nmap or sudo apt-get install nmap 编辑 ~/.ssh/config 添加如下配置 Host github.com HostName github.com ProxyCommand /usr/bin/ncat --proxy 127.0.0.1:7091 --proxy-type socks5 %h %p</description></item><item><title>Gnupg Usage</title><link>https://note.codiy.net/docs/2020/11/gnupg-usage/</link><pubDate>Wed, 18 Nov 2020 15:20:27 +0800</pubDate><guid>https://note.codiy.net/docs/2020/11/gnupg-usage/</guid><description>gnupg 简介 采用主密码 + 非对称密钥对的形式进行信息的加解密 只有主密码或者只有密钥对均不能正常加解密, 得配合起来用. 私钥的导入和导出,都需要验证主密码 应用一(A,B双方文件加密传输): A用B的公钥对文档进行加密后传送给B, B拿到加密文档后用B的私钥进行解密得到原文档. 应用二(A,B双方进行文件加密并签名): A用B的公钥对文档进行加密,并用A自己的私钥进行签名(签章), B拿到后用B的私钥进行解密,并用A的公钥进行验签. gnupg 使用 创建新密钥对 gpg --full-gen-key 导入私钥(公钥可由私钥生成，无需导入) // 导入公钥或私钥 gpg --import xxx.pub.key gpg --import xxx.sec.key 信任密钥 // 方式1 cat &amp;#39;trusted-key B2980F3D615692897D3F344FAC8E655219F3ABB3&amp;#39; &amp;gt;&amp;gt; ~/.gnupg/gpg.conf // 方式2, 选5 I trust ultimately gpg --edit-key &amp;lt;user-id&amp;gt; trust 列出公钥私钥 gpg --list-keys gpg --list-secret-keys 加密，解密，签名 // 加密文档, 使用对方公钥进行加密 gpg --recipient &amp;lt;user-id&amp;gt; --encrypt doc // 解密文档 gpg --decrypt doc.</description></item></channel></rss>